name: e2e_test

on:
  pull_request:
    branches:
      - OSC-MIGRATION
      - master
    paths:
      - "**.go"
      - "Dockerfile"
      - "Makefile"
      - "go.*"
      - "osc-bsu-csi-driver/**.yaml"
      - ".github/workflows/e2e_test.yml"
  workflow_dispatch:

jobs:
  e2e:
    runs-on: [self-hosted, linux]
    steps:
    - name: ‚¨áÔ∏è Checkout repository
      uses: actions/checkout@v4
    - name: ‚¨áÔ∏è Checkout CAPOSC
      uses: actions/checkout@v4
      with:
        repository: 'outscale/cluster-api-provider-outscale'
        path: "cluster-api-provider-outscale"
    - name: üîê Set ak/sk name based on runner region
      run: .github/scripts/runneraksk.sh
    - name: ‚¨áÔ∏è Install kubectl
      uses: azure/setup-kubectl@v4
      with:
        version: v1.30.7
    - name: ‚¨áÔ∏è Install helm
      uses: azure/setup-helm@v4
      with:
        version: v3.16.2
    - name: ‚¨áÔ∏è Install Go
      uses: actions/setup-go@v5
      with:
        go-version-file: 'go.mod'
    - name: üßπ Frieza
      uses: outscale/frieza-github-actions/frieza-clean@master
      with:
        access_key: ${{ secrets[env.OSC_ACCESS_KEY_NAME] }}
        secret_key: ${{ secrets[env.OSC_SECRET_KEY_NAME] }}
        region: ${{ env.OSC_REGION }}
    - name: üë∑ Deploy test cluster
      id: caposc
      uses: outscale/cluster-api-provider-outscale/github_actions/deploy_cluster@main
      with:
        RUNNER_NAME: ${{ runner.name }}
        OKS_ACCESS_KEY: ${{ secrets.OKS_ACCESS_KEY }}
        OKS_SECRET_KEY: ${{ secrets.OKS_SECRET_KEY }}
        OKS_REGION: ${{ vars.OKS_REGION }}
        OSC_ACCESS_KEY: ${{ secrets[env.OSC_ACCESS_KEY_NAME] }}
        OSC_SECRET_KEY: ${{ secrets[env.OSC_SECRET_KEY_NAME] }}
        OSC_REGION: ${{ env.OSC_REGION }}
        CLUSTER_NAME: "csi"
        IMAGE_NAME: ${{ vars[env.IMG_MANAGEMENT_NAME] }}
        CCM: true
    - name: üì¶ Build & Push the Docker image
      run: |
        docker login ${{ vars.REGISTRY }} -u admin -p ${{ secrets.HARBOR_ADMIN_PASSWORD }}
        make buildx-image image-tag image-push
      env:
        REGISTRY_IMAGE: "${{ vars.REGISTRY }}/outscale/csi"
        IMAGE_TAG: ${{ github.sha }}
        REGISTRY_TAG: ${{ github.sha }}
    - name: üë∑ Install CSI
      run: |
        kubectl create secret generic osc-csi-bsu --from-literal=access_key=$OSC_ACCESS_KEY --from-literal=secret_key=$OSC_SECRET_KEY -n kube-system
        kubectl apply -f https://raw.githubusercontent.com/kubernetes-csi/external-snapshotter/release-8.0/client/config/crd/snapshot.storage.k8s.io_volumesnapshotclasses.yaml
        kubectl apply -f https://raw.githubusercontent.com/kubernetes-csi/external-snapshotter/release-8.0/client/config/crd/snapshot.storage.k8s.io_volumesnapshotcontents.yaml
        kubectl apply -f https://raw.githubusercontent.com/kubernetes-csi/external-snapshotter/release-8.0/client/config/crd/snapshot.storage.k8s.io_volumesnapshots.yaml
        kubectl apply -f https://raw.githubusercontent.com/kubernetes-csi/external-snapshotter/release-8.0/deploy/kubernetes/snapshot-controller/rbac-snapshot-controller.yaml
        kubectl apply -f https://raw.githubusercontent.com/kubernetes-csi/external-snapshotter/release-8.0/deploy/kubernetes/snapshot-controller/setup-snapshot-controller.yaml
        make helm_deploy 
      env:
        KUBECONFIG: "${{ github.workspace }}/${{ steps.caposc.outputs.KUBECONFIG }}"
        OSC_ACCESS_KEY: ${{ secrets[env.OSC_ACCESS_KEY_NAME] }}
        OSC_SECRET_KEY: ${{ secrets[env.OSC_SECRET_KEY_NAME] }}
        OSC_REGION: ${{ env.OSC_REGION}}
        TARGET_IMAGE: "${{ vars.REGISTRY }}/outscale/csi"
        TARGET_TAG: ${{ github.sha }}
    - name: üß™ Run e2e tests
      run: make test-e2e
      env:
        KUBECONFIG: "${{ github.workspace }}/${{ steps.caposc.outputs.KUBECONFIG }}"
        OSC_ACCESS_KEY: ${{ secrets[env.OSC_ACCESS_KEY_NAME] }}
        OSC_SECRET_KEY: ${{ secrets[env.OSC_SECRET_KEY_NAME] }}
        OSC_REGION: ${{ env.OSC_REGION }}
        AWS_AVAILABILITY_ZONES: ${{ env.OSC_SUBREGION_NAME }}