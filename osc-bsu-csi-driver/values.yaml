# Default values for aws-ebs-csi-driver.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Number of replicas to deploy
replicaCount: 2

image:
  # -- Container image to use   
  repository: outscale/osc-ebs-csi-driver
  # -- Container image tag to deploy
  tag: v0.1.1
  # -- Container pull policy
  pullPolicy: IfNotPresent

# -- Verbosity level of the plugin
verbosity: 10

# -- Timeout for sidecars
timeout: 60s

backoff:
  # integer in second defining initial duration
  # -- Initial duraction of backoff   
  duration: "1"
  # float define the factor multiplied by Duration each iteration
  # -- Factor multiplied by Duration for each iteration
  factor: "1.9"
  # integer defining the remaining number of iterations in which the duration parameter may change
  # -- Remaining number of iterations in which the duration parameter may change
  steps: "20"

sidecars:
  provisionerImage:
    repository: k8s.gcr.io/sig-storage/csi-provisioner
    tag: "v3.0.0"
    # -- Enable http endpoint to get metrics of the container
    enableHttpEndpoint: false
    # -- Port of the http endpoint
    httpEndpointPort: "8089"
    # -- Enable liveness probe for the container
    enableLivenessProbe: false
  attacherImage:
    repository: k8s.gcr.io/sig-storage/csi-attacher
    tag: "v3.3.0"
    # -- Enable http endpoint to get metrics of the container
    enableHttpEndpoint: false
    # -- Port of the http endpoint
    httpEndpointPort: "8090"
    # -- Enable liveness probe for the container
    enableLivenessProbe: false
  snapshotterImage:
    repository: k8s.gcr.io/sig-storage/csi-snapshotter
    tag: "v4.2.1"
    # -- Enable http endpoint to get metrics of the container
    enableHttpEndpoint: false
    # -- Port of the http endpoint
    httpEndpointPort: "8091"
    # -- Enable liveness probe for the container
    enableLivenessProbe: false
  livenessProbeImage:
    repository: k8s.gcr.io/sig-storage/livenessprobe
    tag: "v2.5.0"
  resizerImage:
    repository: k8s.gcr.io/sig-storage/csi-resizer
    tag: "v1.3.0"
    # -- Enable http endpoint to get metrics of the container
    enableHttpEndpoint: false
    # -- Port of the http endpoint
    httpEndpointPort: "8092"
    # -- Enable liveness probe for the container
    enableLivenessProbe: false
  nodeDriverRegistrarImage:
    repository: k8s.gcr.io/sig-storage/csi-node-driver-registrar
    tag: "v2.3.0"
    # -- Enable http endpoint to get metrics of the container
    enableHttpEndpoint: false
    # -- Port of the http endpoint
    httpEndpointPort: "8093"
    # -- Enable liveness probe for the container
    enableLivenessProbe: false

# -- Specify image pull secrets 
imagePullSecrets: []
# -- Override name of the app (instead of `osc-bsu-csi-driver`)
nameOverride: ""

# TODO: REMOVE
# @ignored
fullnameOverride: ""

# -- Annotations for controller pod
podAnnotations: {}
# -- Labels for controller pod
podLabels: {}

# -- Enable schedule volume for dynamic volume provisioning
# True if enable volume scheduling for dynamic volume provisioning
enableVolumeScheduling: false

# -- Enable volume resizing 
# True if enable volume resizing
enableVolumeResizing: false

# -- Enable volume snapshot 
# True if enable volume snapshot
enableVolumeSnapshot: false

# -- Specify limits of resources used by the pod
resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

#@ignored
tolerateAllTaints: true
# -- Pod tolerations
tolerations: []

# -- Affinity settings  
affinity: {}

# Extra volume tags to attach to each dynamically provisioned volume.
# extraVolumeTags:
#   key1: value1
#   key2: value2
# -- Add extra tags on volume
extraVolumeTags: {}

# -- Add pv/pvc metadata to plugin create requests as parameters
extraCreateMetadata: false

# -- Region to use, otherwise it will be looked up via metadata. By providing this parameter, the controller will not require to access the metadata.
region: ""

# -- Maximum volume to attach to a node (see [Docs](https://docs.outscale.com/en/userguide/About-Volumes.html))
maxBsuVolumes: "25"

# -- Default filesystem for the volume if no `FsType` is set in `StorageClass`
defaultFsType: "ext4"

node:
  # -- Annotations for controller pod
  podAnnotations: {}
  # -- Labels for controller pod
  podLabels: {}
  # @ignored
  tolerateAllTaints: true
  # -- Pod tolerations
  tolerations: []

serviceAccount:
  controller:
    # -- Annotations to add to the Controller ServiceAccount
    annotations: {}
  snapshot:
    # -- Annotations to add to the Snapshot ServiceAccount
    annotations: {}

credentials:
  # The name of the secret storing the below fields
  # (Default is osc-csi-bsu to avoid breaking existing configs)
  # -- Use AK/SK from this secret
  secretName: osc-csi-bsu

  # We can actually create this secret with the following
  # ak/sk, if create is true.
  # -- Actually create a secret in the deployment for AK/SK (else, only reference it)
  create: false
  # -- If creating a secret, put this AK inside.
  accessKey: null
  # -- If creating a secret, put this SK inside.
  secretKey: null

csiDriver:
  # -- Policy of the FileSystem (see [Docs](https://kubernetes-csi.github.io/docs/support-fsgroup.html#supported-modes))
  fsGroupPolicy: File
