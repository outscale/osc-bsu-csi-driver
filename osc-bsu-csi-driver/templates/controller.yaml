# Controller Service
kind: Deployment
apiVersion: apps/v1
metadata:
  name: osc-csi-controller
  namespace: kube-system
  labels:
    {{- include "osc-bsu-csi-driver.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: osc-csi-controller
      {{- include "osc-bsu-csi-driver.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: osc-csi-controller
        {{- include "osc-bsu-csi-driver.labels" . | nindent 8 }}
        {{- if .Values.podLabels }}
          {{ toYaml .Values.podLabels | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- if .Values.podAnnotations }}
        {{- toYaml .Values.podAnnotations | nindent 8 }}
        {{- end }}
    spec:
      nodeSelector:
        kubernetes.io/os: linux
        {{- with .Values.nodeSelector }}
{{ toYaml . | indent 8 }}
        {{- end }}
      serviceAccountName: osc-csi-controller-sa
      priorityClassName: system-cluster-critical
      {{- with .Values.affinity }}
      affinity: {{ toYaml . | nindent 8 }}
      {{- end }}
      tolerations:
        {{- if .Values.tolerateAllTaints }}
        - operator: Exists
        {{- end }}
        {{- with .Values.tolerations }}
{{ toYaml . | indent 8 }}
        {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.containerSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: osc-plugin
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            {{- if ne .Release.Name "kustomize" }}
            - controller
            {{- else }}
            # - {all,controller,node} # specify the driver mode
            {{- end }}
            - --endpoint=$(CSI_ENDPOINT)
            {{- if .Values.extraVolumeTags }}
              {{- include "osc-bsu-csi-driver.extra-volume-tags" . | nindent 12 }}
            {{- end }}
            {{- if .Values.extraSnapshotTags }}
              {{- include "osc-bsu-csi-driver.extra-snapshot-tags" . | nindent 12 }}
            {{- end }}
            - --logtostderr
            - --v={{ .Values.verbosity }}
          env:
            - name: CSI_ENDPOINT
              value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock

            - name: OSC_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.credentials.secretName }}
                  key: access_key
                  optional: true
            - name: OSC_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.credentials.secretName }}
                  key: secret_key
                  optional: true
            {{- if .Values.customEndpoint }}
            - name: OSC_ENDPOINT_API
              value: {{ .Values.customEndpoint }}
            {{- end }}
            {{- if .Values.region }}
            - name: AWS_REGION
              value: {{ .Values.region }}
            {{- end }}
            {{- if .Values.maxBsuVolumes }}
            - name: MAX_BSU_VOLUMES
              value: "{{ .Values.maxBsuVolumes }}"
            {{- end }}
            - name: BACKOFF_DURATION
              value: "{{ .Values.backoff.duration }}"
            - name: BACKOFF_FACTOR
              value: "{{ .Values.backoff.factor }}"
            - name: BACKOFF_STEPS
              value: "{{ .Values.backoff.steps }}"
            {{- if .Values.httpsProxy }}
            - name: HTTPS_PROXY
              value: {{ .Values.httpsProxy }}
            - name: NO_PROXY
              value: {{ .Values.noProxy }}
            {{- end }}
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
            {{- if .Values.caBundle.name }}
            - name: ca-bundle
              mountPath: /etc/ssl/certs
              readOnly: true
            {{- end }}
          ports:
            - name: healthz
              containerPort: {{ .Values.sidecars.livenessProbeImage.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 10
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 10
            failureThreshold: 5
          {{- with .Values.resources }}
          resources: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.containerSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        - name: csi-provisioner
          image: {{ printf "%s:%s" .Values.sidecars.provisionerImage.repository .Values.sidecars.provisionerImage.tag }}
          args:
            {{- if not (regexMatch "(-retry-interval-max)" (join " " .Values.sidecars.provisionerImage.additionalArgs)) }}
            - --retry-interval-max=5m
            {{- end }}
            - --csi-address=$(ADDRESS)
            - --v={{ .Values.verbosity }}
            {{- if not (regexMatch "(-kube-api-qps)|(-kube-api-burst)|(-worker-threads)" (join " " .Values.sidecars.provisionerImage.additionalArgs)) }}
            - --kube-api-qps=20
            - --kube-api-burst=100
            - --worker-threads=100
            {{- end }}
            {{- if .Values.enableVolumeScheduling }}
            - --feature-gates=Topology=true
            {{- end}}
            {{- if .Values.extraCreateMetadata }}
            - --extra-create-metadata
            {{- end}}
            # Dynamically adding additionalArgs from values.yaml
            {{- range .Values.sidecars.provisionerImage.additionalArgs }}
            - {{ . }}
            {{- end }}
            - --leader-election=true
            {{- if .Values.sidecars.provisionerImage.leaderElection.leaseDuration }}
            - --leader-election-lease-duration={{ .Values.sidecars.provisionerImage.leaderElection.leaseDuration }}
            {{- end }}
            {{- if .Values.sidecars.provisionerImage.leaderElection.renewDeadline}}
            - --leader-election-renew-deadline={{ .Values.sidecars.provisionerImage.leaderElection.renewDeadline }}
            {{- end }}
            {{- if .Values.sidecars.provisionerImage.leaderElection.retryPeriod }}
            - --leader-election-retry-period={{ .Values.sidecars.provisionerImage.leaderElection.retryPeriod }}
            {{- end }}
            - --timeout={{ .Values.timeout }}
            - --default-fstype={{ .Values.defaultFsType }}
          {{- if .Values.sidecars.provisionerImage.enableHttpEndpoint }}
            - --http-endpoint=:{{ .Values.sidecars.provisionerImage.httpEndpointPort }}
          {{- end }}
          {{- if .Values.sidecars.provisionerImage.enableHttpEndpoint }}
          ports:
            - name: httpendpoint
              containerPort: {{ .Values.sidecars.provisionerImage.httpEndpointPort }}
              protocol: TCP
          {{- end }}
          {{- if and .Values.sidecars.provisionerImage.enableHttpEndpoint .Values.sidecars.provisionerImage.enableLivenessProbe }}
          livenessProbe:
            httpGet:
              path: /healthz/leader-election
              port: httpendpoint
              scheme: HTTP
          {{- end }}
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
          {{- with .Values.resources }}
          resources: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.sidecars.provisionerImage.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        - name: csi-attacher
          image: {{ printf "%s:%s" .Values.sidecars.attacherImage.repository .Values.sidecars.attacherImage.tag }}
          args:
            {{- if not (regexMatch "(-retry-interval-max)" (join " " .Values.sidecars.attacherImage.additionalArgs)) }}
            - --retry-interval-max=5m
            {{- end }}
            - --csi-address=$(ADDRESS)
            - --v={{ .Values.verbosity }}
            {{- if not (regexMatch "(-kube-api-qps)|(-kube-api-burst)|(-worker-threads)" (join " " .Values.sidecars.attacherImage.additionalArgs)) }}
            - --kube-api-qps=20
            - --kube-api-burst=100
            - --worker-threads=100
            {{- end }}
            # Dynamically adding additionalArgs from values.yaml
            {{- range .Values.sidecars.attacherImage.additionalArgs }}
            - {{ . }}
            {{- end }}
            - --leader-election=true
            {{- if .Values.sidecars.attacherImage.leaderElection.leaseDuration }}
            - --leader-election-lease-duration={{ .Values.sidecars.attacherImage.leaderElection.leaseDuration }}
            {{- end }}
            {{- if .Values.sidecars.attacherImage.leaderElection.renewDeadline}}
            - --leader-election-renew-deadline={{ .Values.sidecars.attacherImage.leaderElection.renewDeadline }}
            {{- end }}
            {{- if .Values.sidecars.attacherImage.leaderElection.retryPeriod }}
            - --leader-election-retry-period={{ .Values.sidecars.attacherImage.leaderElection.retryPeriod }}
            {{- end }}
            - --timeout={{ .Values.timeout }}
          {{- if .Values.sidecars.attacherImage.enableHttpEndpoint }}
            - --http-endpoint=:{{ .Values.sidecars.attacherImage.httpEndpointPort }}
          {{- end }}
          {{- if .Values.sidecars.attacherImage.enableHttpEndpoint }}
          ports:
            - name: httpendpoint
              containerPort: {{ .Values.sidecars.attacherImage.httpEndpointPort }}
              protocol: TCP
          {{- end }}
          {{- if and .Values.sidecars.attacherImage.enableHttpEndpoint .Values.sidecars.attacherImage.enableLivenessProbe }}
          livenessProbe:
            httpGet:
              path: /healthz/leader-election
              port: httpendpoint
              scheme: HTTP
          {{- end }}
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
          {{- with .Values.resources }}
          resources: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.sidecars.attacherImage.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- if .Values.enableVolumeSnapshot }}
        - name: csi-snapshotter
          image: {{ printf "%s:%s" .Values.sidecars.snapshotterImage.repository .Values.sidecars.snapshotterImage.tag }}
          args:
            {{- if not (regexMatch "(-retry-interval-max)" (join " " .Values.sidecars.snapshotterImage.additionalArgs)) }}
            - --retry-interval-max=5m
            {{- end }}
            - --csi-address=$(ADDRESS)
            # Dynamically adding additionalArgs from values.yaml
            {{- range .Values.sidecars.snapshotterImage.additionalArgs }}
            - {{ . }}
            {{- end }}
            - --leader-election=true
            {{- if .Values.sidecars.snapshotterImage.leaderElection.leaseDuration }}
            - --leader-election-lease-duration={{ .Values.sidecars.snapshotterImage.leaderElection.leaseDuration }}
            {{- end }}
            {{- if .Values.sidecars.snapshotterImage.leaderElection.renewDeadline}}
            - --leader-election-renew-deadline={{ .Values.sidecars.snapshotterImage.leaderElection.renewDeadline }}
            {{- end }}
            {{- if .Values.sidecars.snapshotterImage.leaderElection.retryPeriod }}
            - --leader-election-retry-period={{ .Values.sidecars.snapshotterImage.leaderElection.retryPeriod }}
            {{- end }}
          {{- if .Values.sidecars.snapshotterImage.enableHttpEndpoint }}
            - --http-endpoint=:{{ .Values.sidecars.snapshotterImage.httpEndpointPort }}
          {{- end }}
          {{- if .Values.sidecars.snapshotterImage.enableHttpEndpoint }}
          ports:
            - name: httpendpoint
              containerPort: {{ .Values.sidecars.snapshotterImage.httpEndpointPort }}
              protocol: TCP
          {{- end }}
          {{- if and .Values.sidecars.snapshotterImage.enableHttpEndpoint .Values.sidecars.snapshotterImage.enableLivenessProbe }}
          livenessProbe:
            httpGet:
              path: /healthz/leader-election
              port: httpendpoint
              scheme: HTTP
          {{- end }}
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
          {{- with .Values.resources }}
          resources: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.sidecars.snapshotterImage.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- end }}
        {{- if .Values.enableVolumeResizing }}
        - name: csi-resizer
          image: {{ printf "%s:%s" .Values.sidecars.resizerImage.repository .Values.sidecars.resizerImage.tag }}
          imagePullPolicy: Always
          args:
            {{- if not (regexMatch "(-retry-interval-max)" (join " " .Values.sidecars.resizerImage.additionalArgs)) }}
            - --retry-interval-max=5m
            {{- end }}
            - --csi-address=$(ADDRESS)
            - --v={{ .Values.verbosity }}
            - --timeout={{ .Values.timeout }}
            {{- if not (regexMatch "(-kube-api-qps)|(-kube-api-burst)|(-workers)" (join " " .Values.sidecars.resizerImage.additionalArgs)) }}
            - --kube-api-qps=20
            - --kube-api-burst=100
            - --workers=100
            {{- end }}
            # Dynamically adding additionalArgs from values.yaml
            {{- range .Values.sidecars.resizerImage.additionalArgs }}
            - {{ . }}
            {{- end }}
            - --leader-election=true
            {{- if .Values.sidecars.resizerImage.leaderElection.leaseDuration }}
            - --leader-election-lease-duration={{ .Values.sidecars.resizerImage.leaderElection.leaseDuration }}
            {{- end }}
            {{- if .Values.sidecars.resizerImage.leaderElection.renewDeadline}}
            - --leader-election-renew-deadline={{ .Values.sidecars.resizerImage.leaderElection.renewDeadline }}
            {{- end }}
            {{- if .Values.sidecars.resizerImage.leaderElection.retryPeriod }}
            - --leader-election-retry-period={{ .Values.sidecars.resizerImage.leaderElection.retryPeriod }}
            {{- end }}
        {{- if .Values.sidecars.resizerImage.enableHttpEndpoint }}
            - --http-endpoint=:{{ .Values.sidecars.resizerImage.httpEndpointPort }}
        {{- end }}
        {{- if .Values.sidecars.resizerImage.enableHttpEndpoint }}
          ports:
            - name: httpendpoint
              containerPort: {{ .Values.sidecars.resizerImage.httpEndpointPort }}
              protocol: TCP
        {{- end }}
        {{- if and .Values.sidecars.resizerImage.enableHttpEndpoint .Values.sidecars.resizerImage.enableLivenessProbe }}
          livenessProbe:
            httpGet:
              path: /healthz/leader-election
              port: httpendpoint
              scheme: HTTP
        {{- end }}
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
          {{- with .Values.resources }}
          resources: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.sidecars.resizerImage.securityContext }}
          securityContext:  
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- end }}
        - name: liveness-probe
          image: {{ printf "%s:%s" .Values.sidecars.livenessProbeImage.repository .Values.sidecars.livenessProbeImage.tag }}
          args:
            - --csi-address=/csi/csi.sock
            - --health-port={{ .Values.sidecars.livenessProbeImage.port }}
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
          {{- with .Values.resources }}
          resources: {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.sidecars.livenessProbeImage.securityContext }}
          securityContext:  
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: socket-dir
          emptyDir: {}
        {{- if .Values.caBundle.name }}
        - name: ca-bundle
          secret:
            secretName: {{ .Values.caBundle.name }}
            items:
              - key: {{ .Values.caBundle.key }}
                path: ca-certificates.crt
        {{- end }}
