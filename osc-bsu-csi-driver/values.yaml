# Default values for osc-bsu-csi-driver.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Number of replicas to deploy
replicaCount: 2
# -- Use customEndpoint (url with protocol) ex: https://api.eu-west-2.outscale.com/api/v1
customEndpoint: ""
image:
  # -- Container image to use
  repository: outscale/osc-bsu-csi-driver
  # -- Container image tag to deploy
  tag: v1.6.0
  # -- Container pull policy
  pullPolicy: IfNotPresent

# -- Verbosity level of the plugin
verbosity: 3

# -- Timeout for sidecars
timeout: 60s

backoff:
  # integer in second defining initial duration
  # -- Initial duraction of backoff
  duration: "750ms"
  # float define the factor multiplied by Duration each iteration
  # -- Factor multiplied by Duration for each iteration
  factor: "1.4"
  # integer defining the remaining number of iterations in which the duration parameter may change
  # -- Remaining number of iterations in which the duration parameter may change
  steps: "3"

sidecars:
  provisionerImage:
    repository: registry.k8s.io/sig-storage/csi-provisioner
    tag: "v5.3.0"
    # -- Enable http endpoint to get metrics of the container
    enableHttpEndpoint: false
    # -- Port of the http endpoint
    httpEndpointPort: "8089"
    # -- Enable liveness probe for the container
    enableLivenessProbe: false
    # -- Customize leaderElection, you can specify `leaseDuration`, `renewDeadline` and/or `retryPeriod`. Each value must be in an acceptable time.ParseDuration format.(Ref: https://pkg.go.dev/flag#Duration)
    leaderElection: {}
    securityContext:
      seccompProfile:
        type: RuntimeDefault
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
    additionalArgs: []
    # Grant additional permissions to csi-provisioner
    additionalClusterRoleRules:
    # Sidecar resources. If not set, the top-level resources will be used.
    resources: {}
  attacherImage:
    repository: registry.k8s.io/sig-storage/csi-attacher
    tag: "v4.9.0"
    # -- Enable http endpoint to get metrics of the container
    enableHttpEndpoint: false
    # -- Port of the http endpoint
    httpEndpointPort: "8090"
    # -- Enable liveness probe for the container
    enableLivenessProbe: false
    # -- Customize leaderElection, you can specify `leaseDuration`, `renewDeadline` and/or `retryPeriod`. Each value must be in an acceptable time.ParseDuration format.(Ref: https://pkg.go.dev/flag#Duration)
    leaderElection: {}
    securityContext:
      seccompProfile:
        type: RuntimeDefault
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
    additionalArgs: []
    # -- Grant additional permissions to csi-attacher
    additionalClusterRoleRules:
    # -- Sidecar resources. If not set, the top-level resources will be used.
    resources: {}
  snapshotterImage:
    repository: registry.k8s.io/sig-storage/csi-snapshotter
    tag: "v8.3.0"
    # -- Enable http endpoint to get metrics of the container
    enableHttpEndpoint: false
    # -- Port of the http endpoint
    httpEndpointPort: "8091"
    # -- Enable liveness probe for the container
    enableLivenessProbe: false
    # -- Customize leaderElection, you can specify `leaseDuration`, `renewDeadline` and/or `retryPeriod`. Each value must be in an acceptable time.ParseDuration format.(Ref: https://pkg.go.dev/flag#Duration)
    leaderElection: {}
    securityContext:
      seccompProfile:
        type: RuntimeDefault
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
    additionalArgs: []
    # -- Grant additional permissions to csi-snapshotter
    additionalClusterRoleRules:
    # -- Sidecar resources. If not set, the top-level resources will be used.
    resources: {}
  livenessProbeImage:
    repository: registry.k8s.io/sig-storage/livenessprobe
    tag: "v2.16.0"
    # -- Port of the liveness of the main container
    port: "9808"
    securityContext:
      seccompProfile:
        type: RuntimeDefault
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
    # -- Sidecar resources. If not set, the node or top-level resources will be used.
    resources: {}
  resizerImage:
    repository: registry.k8s.io/sig-storage/csi-resizer
    tag: "v1.14.0"
    # -- Enable http endpoint to get metrics of the container
    enableHttpEndpoint: false
    # -- Port of the http endpoint
    httpEndpointPort: "8092"
    # -- Enable liveness probe for the container
    enableLivenessProbe: false
    # -- Customize leaderElection, you can specify `leaseDuration`, `renewDeadline` and/or `retryPeriod`. Each value must be in an acceptable time.ParseDuration format.(Ref: https://pkg.go.dev/flag#Duration)
    leaderElection: {}
    securityContext:
      seccompProfile:
        type: RuntimeDefault
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
    additionalArgs: []
    # -- Grant additional permissions to csi-resizer
    additionalClusterRoleRules:
    # -- Sidecar resources. If not set, the top-level resources will be used.
    resources: {}
  nodeDriverRegistrarImage:
    repository: registry.k8s.io/sig-storage/csi-node-driver-registrar
    tag: "v2.14.0"
    # -- Enable http endpoint to get metrics of the container
    enableHttpEndpoint: false
    # -- Port of the http endpoint
    httpEndpointPort: "8093"
    # -- Enable liveness probe for the container
    enableLivenessProbe: false
    securityContext:
      seccompProfile:
        type: RuntimeDefault
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
    # -- Sidecar resources. If not set, the node or top-level resources will be used.
    resources: {}


# -- Specify image pull secrets
imagePullSecrets: []
# -- Override name of the app (instead of `osc-bsu-csi-driver`)
nameOverride: ""

# TODO: REMOVE
# @ignored
fullnameOverride: ""

# -- Annotations for controller pod
podAnnotations: {}
# -- Labels for controller pod
podLabels: {}

# -- Enable schedule volume for dynamic volume provisioning
# True if enable volume scheduling for dynamic volume provisioning
enableVolumeScheduling: true

# -- Enable volume resizing
# True if enable volume resizing
enableVolumeResizing: false

# -- Enable volume snapshot
# True if enable volume snapshot
enableVolumeSnapshot: false

# -- Specify limits of resources used by the pod containers
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
nodeSelector: {}
# -- Controller deployment update strategy.
updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 1

#@ignored
tolerateAllTaints: true
# -- Pod tolerations
tolerations:
  - key: CriticalAddonsOnly
    operator: Exists
  - operator: Exists
    effect: NoExecute
    tolerationSeconds: 300

# -- Affinity settings
affinity: {}

# Extra volume tags to attach to every dynamically provisioned volume.
# extraVolumeTags:
#   key1: value1
#   key2: value2
# -- Add extra tags on volumes
extraVolumeTags: {}
# Extra snapshot tags to attach to every created snapshot.
# extraSnapshotTags:
#   key1: value1
#   key2: value2
# -- Add extra tags on snapshots
extraSnapshotTags: {}

# -- Add pv/pvc metadata to plugin create requests as parameters
extraCreateMetadata: false

# -- Region to use, otherwise it will be looked up via metadata. By providing this parameter, the controller will not require to access the metadata.
region: ""

# -- Maximum number of volumes that can be attached to a node, autocomputed by default (see [Docs](https://docs.outscale.com/en/userguide/About-Volumes.html))
maxBsuVolumes: ""

# -- Default filesystem for the volume if no `FsType` is set in `StorageClass`
defaultFsType: "ext4"

node:
  # -- Annotations for node controller pod
  podAnnotations: {}
  # -- Labels for node controller pod
  podLabels: {}
  # @ignored
  tolerateAllTaints: true
  # -- Pod tolerations
  tolerations: []
  # Privileged containers always run as `Unconfined`, which means that they are not restricted by a seccomp profile.
  containerSecurityContext:
    readOnlyRootFilesystem: false  # Allow write operations needed for volume management
    privileged: true
    allowPrivilegeEscalation: true  # Ensure privileges can be escalated for volume management if needed
    seccompProfile:
      type: Unconfined     # temporarily disable seccomp restrictions to allow necessary system calls for LUKS volumes
  # -- Node controller DaemonSet resources. If not set, the top-level resources will be used.
  resources: {}
  # -- Node controller command line additional args
  args: []
  # -- Node controller DaemonSet update strategy
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 10%


serviceAccount:
  controller:
    annotations: {}
  snapshot:
    annotations: {}

credentials:
  # The name of the secret storing the below fields
  # (Default is osc-csi-bsu to avoid breaking existing configs)
  # -- Use AK/SK from this secret
  secretName: osc-csi-bsu

  # We can actually create this secret with the following
  # ak/sk, if create is true.
  # -- Actually create a secret in the deployment for AK/SK (else, only reference it)
  create: false
  # -- If creating a secret, put this AK inside.
  accessKey: null
  # -- If creating a secret, put this SK inside.
  secretKey: null

csiDriver:
  # -- Policy of the FileSystem (see [Docs](https://kubernetes-csi.github.io/docs/support-fsgroup.html#supported-modes))
  fsGroupPolicy: File

caBundle:
  # -- Secret name containing additional certificates authorities
  name: ''
  # -- Entry key in secret used to store additional certificates authorities
  key: ''

# -- Value used to create environment variable HTTPS_PROXY
httpsProxy: ''
# -- Value used to create environment variable NO_PROXY
noProxy: ''
